import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'

version = '1.0'

ext {

    if (Os.isFamily(Os.FAMILY_UNIX)) {
        os = 'linux'
    }
    if (Os.isFamily(Os.FAMILY_MAC)) {
        os = 'macosx'
    }
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        os = 'windows'
    }
    arch = System.getProperty("os.arch");

    if(arch == 'amd64'){
        arch = 'x86_64'
    }
    opencvBinaryClassifer = os+'-'+arch;

}

test {
    //Ensure you see test output on console
    testLogging.showStandardStreams = true
}


dependencies {
    compile group: 'org.bytedeco.javacpp-presets', name: 'tesseract', version: '3.03-rc1-1.0'
    compile group: 'org.bytedeco.javacpp-presets', name: 'tesseract', version: '3.03-rc1-1.0', classifier: opencvBinaryClassifer
    compile group: 'org.bytedeco.javacpp-presets', name: 'leptonica', version: '1.72-1.0', classifier: opencvBinaryClassifer
    // https://mvnrepository.com/artifact/jmagick/jmagick
    compile group: 'jmagick', name: 'jmagick', version: '6.6.9'
    // https://mvnrepository.com/artifact/org.im4java/im4java
    compile group: 'org.im4java', name: 'im4java', version: '1.4.0'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

buildscript {
    repositories {
        mavenLocal()
        maven { url { 'https://repository.cars.com/artifactory/libs-release' }}
        maven { url { 'https://repository.cars.com/artifactory/libs-snapshot' }}
    }
    dependencies {
        classpath "com.cars.devops:clutch:0.0.1"

    }
}
apply plugin: 'com.cars.devops.clutch'
/**************************************
 *  Generated by Clutch
 ************************************/

ext {
	springFoxSwaggerVersion='2.4.0'
	springBootVersion='1.3.3.RELEASE'
}

buildscript {
	ext {
		springBootVersion='1.3.3.RELEASE'
	}
    repositories {
		maven { url { 'https://repository.cars.com/artifactory/libs-release' }}
		maven { url { 'https://repository.cars.com/artifactory/libs-snapshot' }}
        maven { url { 'https://plugins.gradle.org/m2/' }}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2"
        classpath "com.cars.devops.plugins:cars-plugin:0.0.1"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
    }
}

group = 'com.cars.image'
version = '1.0'

apply plugin: 'cars'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'application'


jar {
    baseName = 'image-processing-service'
    version =  '1.0'
}

repositories {
	maven { url { 'https://repository.cars.com/artifactory/libs-release' }}
	maven { url { 'https://repository.cars.com/artifactory/libs-snapshot' }}
}


sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {

	compile("com.cars.framework:health-check:1.0")
	compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
	compile("com.cars.framework:cars-framework-config:2.1.2-RELEASE")
    compile("io.springfox:springfox-swagger2:${springFoxSwaggerVersion}")
	compile("io.springfox:springfox-swagger-ui:${springFoxSwaggerVersion}")
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    compile group: 'org.apache.wink', name: 'wink-client', version: '1.4'



    compile localGroovy()

    	
        compile("org.springframework.boot:spring-boot-starter-web")
    

	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile 'junit:junit:4.12'
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.2.1'
}

mainClassName = "com.cars.image.Application"

bootRun {
	enableAssertions = true
    addResources = true
}

tasks.withType(JavaExec) {
    systemProperties System.properties
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
